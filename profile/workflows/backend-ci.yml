name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'einsteini-backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'einsteini-backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: einsteini-backend
    
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongosh --health-interval 10s --health-timeout 5s --health-retries 5
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: einsteini-backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint || echo "No lint script found"
    
    - name: Run tests
      run: npm test || echo "No test script found"
      env:
        NODE_ENV: test
        MONGODB_URI: mongodb://localhost:27017/einsteini-test
    
    - name: Run security audit
      run: npm audit --audit-level high
    
    - name: Check for vulnerabilities
      run: npm run security-check || echo "No security-check script found"

  build:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: einsteini-backend
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: einsteini-backend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build || echo "No build script found"
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: backend-dist
        path: |
          einsteini-backend/
          !einsteini-backend/node_modules
          !einsteini-backend/.git

  docker:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./einsteini-backend
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/einsteini-backend:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/einsteini-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: [docker]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: Deploy to production
      run: |
        echo "Add your deployment script here"
        echo "This could include updating Kubernetes manifests, AWS ECS, or other deployment targets"
        # Example: kubectl set image deployment/einsteini-backend backend=${{ secrets.DOCKERHUB_USERNAME }}/einsteini-backend:${{ github.sha }}
