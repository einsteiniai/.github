name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1' # Run weekly on Mondays at 2 AM UTC

jobs:
  dependency-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [einsteini-android, einsteini-backend, einsteini-dashboard, einsteini-extension]
        
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: './${{ matrix.project }}'
        format: 'sarif'
        output: 'trivy-${{ matrix.project }}.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-${{ matrix.project }}.sarif'

  secret-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@v3.63.2-beta
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  codeql-analysis:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      matrix:
        language: [ 'javascript', 'java' ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  license-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: FOSSA Scan
      uses: fossas/fossa-action@main
      with:
        api-key: ${{ secrets.FOSSA_API_KEY || '' }}
        
    - name: License compliance check
      run: |
        echo "Checking for license compliance..."
        # Add license scanning logic here
        find . -name "package.json" -o -name "pubspec.yaml" | while read file; do
          echo "Checking licenses in: $file"
        done
